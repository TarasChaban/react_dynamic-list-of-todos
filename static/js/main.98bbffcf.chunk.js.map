{"version":3,"sources":["components/TodoList/TodoList.jsx","api/api.jsx","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","todos","selectUser","className","map","todo","key","id","cn","completed","type","readOnly","checked","title","onClick","userId","BASE_URL","getUser","fetch","then","response","json","result","data","CurrentUser","state","selectedUser","this","props","user","setState","prevProps","name","email","phone","React","Component","App","selectedUserId","length","ReactDOM","render","document","getElementById"],"mappings":"8WAKaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,WAAV,OACtB,yBAAKC,UAAU,YACb,sCAEA,yBAAKA,UAAU,4BACb,wBAAIA,UAAU,kBACXF,EAAMG,KAAI,SAAAC,GAAI,OACb,wBACEC,IAAKD,EAAKE,GACVJ,UAAWK,IAAG,iBAAkB,CAC9B,0BAA2BH,EAAKI,UAChC,6BAA8BJ,EAAKI,aAGrC,+BACE,2BAAOC,KAAK,WAAWC,UAAQ,EAACC,QAASP,EAAKI,YAC9C,2BAAIJ,EAAKQ,QAGX,4BACEV,UAAU,iEAKVO,KAAK,SACLI,QAAS,WACPZ,EAAWG,EAAKU,UARpB,gBAWYV,EAAKU,iBCnCvBC,G,MAAW,kCAQJC,EAAU,SAAAF,GAAM,OAC3BG,MAAM,GAAD,OAAIF,EAAJ,kBAAsBD,IACxBI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAM,OAAIA,EAAOC,SCNdC,EAAb,4MACEC,MAAQ,CACNC,aAAc,IAFlB,uDAKE,WAAqB,IAAD,OAClBT,EAAQU,KAAKC,MAAMb,QAChBI,MAAK,SAAAU,GAAI,OAAI,EAAKC,SAAS,CAC1BJ,aAAcG,SARtB,gCAYE,SAAmBE,GAAY,IAAD,OACxBA,EAAUhB,SAAWY,KAAKC,MAAMb,QAClCE,EAAQU,KAAKC,MAAMb,QAChBI,MAAK,SAAAU,GAAI,OAAI,EAAKC,SAAS,CAC1BJ,aAAcG,SAhBxB,oBAqBE,WAAU,IAAD,EAC4BF,KAAKF,MAAMC,aAAtCnB,EADD,EACCA,GAAIyB,EADL,EACKA,KAAMC,EADX,EACWA,MAAOC,EADlB,EACkBA,MAEzB,OACE,yBAAK/B,UAAU,eACb,wBAAIA,UAAU,sBACZ,+CAEGI,IAGL,wBAAIJ,UAAU,qBAAqB6B,GACnC,uBAAG7B,UAAU,sBAAsB8B,GACnC,uBAAG9B,UAAU,sBAAsB+B,QAlC3C,GAAiCC,IAAMC,WCyCxBC,E,4MAtCbZ,MAAQ,CACNxB,MAAO,GACPqC,eAAgB,G,EAQhBpC,WAAa,SAACa,GACZ,EAAKe,SAAS,CACZQ,eAAgBvB,K,uDAPtB,WAAqB,IAAD,OFVpBG,MAAM,GAAD,OAAIF,EAAJ,WACFG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAM,OAAIA,EAAOC,QEUpBJ,MAAK,SAAAlB,GAAK,OAAI,EAAK6B,SAAS,CAAE7B,e,oBASjC,WAAU,IAAD,EAC2B0B,KAAKF,MAA/BxB,EADD,EACCA,MAAOqC,EADR,EACQA,eAEf,OACE,yBAAKnC,UAAU,OACb,yBAAKA,UAAU,gBACZF,EAAMsC,OAAS,GACf,kBAAC,EAAD,CAAUtC,MAAOA,EAAOC,WAAYyB,KAAKzB,cAG5C,yBAAKC,UAAU,gBACb,yBAAKA,UAAU,0BACZmC,EACC,kBAAC,EAAD,CAAavB,OAAQuB,IACnB,0B,GA/BAH,IAAMC,WCHxBI,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.98bbffcf.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport const TodoList = ({ todos, selectUser }) => (\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n\n    <div className=\"TodoList__list-container\">\n      <ul className=\"TodoList__list\">\n        {todos.map(todo => (\n          <li\n            key={todo.id}\n            className={cn('TodoList__item', {\n              'TodoList__item--checked': todo.completed,\n              'TodoList__item--unchecked': !todo.completed,\n            })}\n          >\n            <label>\n              <input type=\"checkbox\" readOnly checked={todo.completed} />\n              <p>{todo.title}</p>\n            </label>\n\n            <button\n              className=\"\n              TodoList__user-button\n              TodoList__user-button--selected\n              button\n            \"\n              type=\"button\"\n              onClick={() => {\n                selectUser(todo.userId);\n              }}\n            >\n              {`User #${todo.userId}`}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      userId: PropTypes.number,\n      title: PropTypes.string,\n      completed: PropTypes.bool,\n    }),\n  ).isRequired,\n  selectUser: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport const getTodos = () => (\n  fetch(`${BASE_URL}/todos`)\n    .then(response => response.json())\n    .then(result => result.data)\n);\n\nexport const getUser = userId => (\n  fetch(`${BASE_URL}/users/${userId}`)\n    .then(response => response.json())\n    .then(result => result.data)\n);\n","import React from 'react';\nimport './CurrentUser.scss';\nimport PropTypes from 'prop-types';\nimport { getUser } from '../../api/api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    selectedUser: {},\n  }\n\n  componentDidMount() {\n    getUser(this.props.userId)\n      .then(user => this.setState({\n        selectedUser: user,\n      }));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      getUser(this.props.userId)\n        .then(user => this.setState({\n          selectedUser: user,\n        }));\n    }\n  }\n\n  render() {\n    const { id, name, email, phone } = this.state.selectedUser;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:\n            {id}\n          </span>\n        </h2>\n        <h3 className=\"CurrentUser__name\">{name}</h3>\n        <p className=\"CurrentUser__email\">{email}</p>\n        <p className=\"CurrentUser__phone\">{phone}</p>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then(todos => this.setState({ todos }));\n  }\n\n    selectUser = (userId) => {\n      this.setState({\n        selectedUserId: userId,\n      });\n    }\n\n    render() {\n      const { todos, selectedUserId } = this.state;\n\n      return (\n        <div className=\"App\">\n          <div className=\"App__sidebar\">\n            {todos.length > 0\n          && <TodoList todos={todos} selectUser={this.selectUser} />}\n          </div>\n\n          <div className=\"App__content\">\n            <div className=\"App__content-container\">\n              {selectedUserId ? (\n                <CurrentUser userId={selectedUserId} />\n              ) : 'No user selected'}\n            </div>\n          </div>\n        </div>\n      );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}